# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release', renv_paths_root: '%LOCALAPPDATA%/renv'}
          - {os: macOS-latest, r: 'release', renv_paths_root: '~/Library/Application Support/renv'}
          - {os: ubuntu-20.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest", renv_paths_root: '~/.local/share/renv'}
          - {os: ubuntu-20.04,   r: 'devel', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest", http-user-agent: "R/4.1.0 (ubuntu-20.04) R (4.1.0 x86_64-pc-linux-gnu x86_64 linux-gnu) on GitHub Actions", renv_paths_root: '~/.local/share/renv' }

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
      SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
      SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
      SLACK_ICON_EMOJI: ${{ secrets.SLACK_ICON_EMOJI }}
      SLACK_INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_INCOMING_URL_PREFIX }}
      SLACK_USERNAME: ${{ secrets.SLACK_USERNAME }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Cache packages
        uses: actions/cache@v2
        with:
          path: ${{ matrix.config.renv_paths_root }}
          key: ${{ runner.os }}-renv-4.0.4-${{ hashFiles('renv.lock') }}
          restore-keys: |
            ${{ runner.os }}-renv-4.0.4-${{ hashFiles('renv.lock') }}
            ${{ runner.os }}-renv-4.0.4-
            ${{ runner.os }}-renv

      - name: Restore packages
        shell: Rscript {0}
        run: |
          if (!requireNamespace("renv", quietly = TRUE)) install.packages("renv")
          renv::restore()
          renv::install("devtools")

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y libcurl4 libcurl4-openssl-dev
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: |
          options(crayon.enabled = TRUE)
          devtools::check(manual = FALSE, cran = TRUE, vignettes = FALSE, error_on = "note", check_dir = "check", args = "--no-examples")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
